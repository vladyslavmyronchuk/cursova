<topRule> =    "MainProgram" "Data" <varsBlok> ; "Start" <codeBlok> "End";
<varsBlok> =    "Int16_t" <identifier> [{<commaAndIdentifier>}];
<identifier> =    _<up_letter> {<low_letter>} {6};
<commaAndIdentifier> =    "," <identifier>;
<codeBlok> =    "Start" <write> | <read> | <assignment> | <ifStatement> 
| <goto_statement> |   < forToOrDownToDoRule> | <while>  | <repeatUntil> "End";
<read> =    "Input"  <identifier> ;
<write> =    "Output" <equation> ;
<assignment> =    <identifier> <==    <equation>;
<ifStatement> =    "If" ( <equation> ) <codeBlok> [<elseStatement>];
<elseStatement> = "Else" <codeBlok>;
<goto_statement> =  [<idenrifier>:]"Goto" <identifier> [<idenrifier>:];
< forToOrDownToDoRule> =  "For" <assignment> "To" | "Downto" <equation> "Do" <codeBlok> ;
<while> = "While" (<equation>) "Do" <codeBlok> "EndWhile" 
| "While" (<equation>) "Do" <codeBlok> "ExitWhile" "EndWHile"
| "While" (<equation>) "Do" <codeBlok> "ContinueWhile"  <codeBlok> "EndWhile";
<repeatUntil> = "Repeat" (<codeBlok>) "Until" <equation>;
<equation> =    <signedNumber> | <identifier> |  <notRule> [{ <operationAndIdentOrNumber> | <equation> }];
< notRule > =    <notOperation> <signedNumber> | <identifier> | <equation>;
<operationAndIdentOrNumber> =    <mult> | <arithmetic> | <logic> | <compare> <signedNumber> | <identifier> | <equation> ;
<arithmetic> =    "+" | "-";
<mult> =    "Mul" | "Div" | "Mod";
<logic> =    "&&" | "||";
<notOperation> =    "!!";
<compare> =    "Eq" | "Ne" | "<" |">";
<comment> = <LComment> { <low_letter> | <up_letter> | <number> } <RComment>;
<LComment> =  "{*";
<RComment> =  "*}";
<signedNumber>	=    [<sign>] <digit>[{digit}];
<sign> =  "+" | "-"  ;
<low_letter> =    a|b|c|d|e|f|g|h|i|j|k|l|n|m|o|p|q|r|s|t|u|v|w|x|y|z;
<up_letter>	=    A|B|C|D|E|F|G|H|I|J|K|L|N|M|O|P|Q|R|S|T|U|V|W|X|Y|Z;
<digit> =    0|1|2|3|4|5|6|7|8|9;
